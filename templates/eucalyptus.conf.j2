###########################################################################
# GLOBAL CONFIGURATION
###########################################################################

# Where Eucalyptus is installed
EUCALYPTUS="/"

# This is the username that you would like eucalyptus to run as
EUCA_USER="eucalyptus"

# Extra options to pass to the eucalyptus-cloud process, such as log
# levels, heap size, or other JVM flags.
# levels, heap size, or other JVM flags.
{% set max_mem = ansible_memtotal_mb %}
{% set xmx = max_mem / 2048 %}
{% set xms = max_mem / 3092 %}
{% if xms|int < 1 %}
{% set xms = xmx %}
{% endif %}
{% if java_iface is defined %}
{% set vnet = 'ansible_' + java_iface %}
{% if hostvars[inventory_hostname][vnet] and hostvars[inventory_hostname][vnet]['ipv4'] is defined %}
CLOUD_OPTS="--bind-addr={{  hostvars[inventory_hostname][vnet]['ipv4']['address'] }} -Xms{{ xms|int }}G -Xmx{{ xmx|int }}G"
{% endif %}
{% else %}
CLOUD_OPTS="-Xms{{ xms|int }}G -Xmx{{ xmx|int }}G"
{% endif %}

###########################################################################
# STORAGE CONTROLLER (SC) CONFIGURATION
###########################################################################

# The number of loop devices to make available at SC startup time.
# The default is 256.  If you supply "max_loop" to the loop driver
# then this setting must be equal to that number.
#CREATE_SC_LOOP_DEVICES=256

###########################################################################
# CLUSTER CONTROLLER (CC) / NODE CONTROLLER (NC) SHARED CONFIGURATION
###########################################################################

# The level of logging output.  Valid settings are, in descending order of
# verbosity: EXTREME, TRACE, DEBUG, INFO, WARN, ERROR, and FATAL.  The
# default is INFO.
#LOGLEVEL="DEBUG"

# The number of old log files to keep when rotating logs, in range [0-999].
# The default is 10. When set to 0, no rotation is performed and log size
# limit is (LOGMAXSIZE, below) is not enforced.
#LOGROLLNUMBER="10"

# The maximum size of the log file, in bytes. 100MB by default. For this
# size to be enforced, LOGROLLNUMBER, above, must be 1 or higher. If log
# rotation is performed by an outside tool, either set LOGROLLNUMBER to 0
# or set this limit to a large value.
#LOGMAXSIZE=104857600

# On a NC, this defines the TCP port on which the NC will listen.
# On a CC, this defines the TCP port on which the CC will contact NCs.
NC_PORT="8775"

###########################################################################
# CLUSTER CONTROLLER (CC) CONFIGURATION
###########################################################################

# The TCP port on which the CC will listen.
CC_PORT="8774"

# The scheduling policy that the CC uses to choose the NC on which to
# run each new instance.  Valid settings include GREEDY and ROUNDROBIN.
# The default scheduling policy is ROUNDROBIN.
SCHEDPOLICY="ROUNDROBIN"

# A space-separated list of IP addresses for all the NCs that this CC
# should communicate with.  The ``euca_conf --register-nodes'' command
# manipulates this setting.
NODES=""

# The default is valid when multiple CCs reside in the same layer 2
# broadcast domain or running single cluster.  Change this setting
# to "N" to enable tunneling when you have separate layer 2 broadcast
# domains in separate clusters.
# This setting has no effect in Edge mode.
DISABLE_TUNNELING="Y"

# The location of the NC service.  The default is
# axis2/services/EucalyptusNC
NC_SERVICE="axis2/services/EucalyptusNC"

###########################################################################
# NODE CONTROLLER (NC) CONFIGURATION
###########################################################################

# The hypervisor that the NC will interact with in order to manage
# virtual machines.  Supported values include "kvm" and "xen".
HYPERVISOR="kvm"

# The following three options determine whether KVM uses Virtio for
# specific types of I/O with instances.  These options only affect the
# KVM hypervisor.

# If "1", use Virtio for the root file system
USE_VIRTIO_ROOT="1"

# If "1", use Virtio for dynamic block volumes
USE_VIRTIO_DISK="1"

# If "1", use Virtio for the network card
USE_VIRTIO_NET="1"

# The number of virtual CPU cores that Eucalyptus is allowed to allocate
# to instances.  The default value of 0 allows Eucalyptus to use all
# CPU cores on the system.
{% if cpu_overcommit is defined %}
MAX_CORES="{{ ansible_processor_vcpus * cpu_overcommit }}"
{% else %}
#MAX_CORES=
{% endif %}
# The amount of disk space, in megabytes, that the NC is allowed to use
# in its work directory ($INSTANCE_PATH/eucalyptus/work).  By default
# the NC chooses automatically.  Values below 10 are ignored.
{% set found = { 'found' : False } %}
{% for drive in ansible_mounts %}
{% if drive['mount'] == "/var/lib/eucalyptus/instances" %}
{% set good_drive = drive %}
{% if found.update({ 'found': True }) %} {% endif %}
{% set max_drive_mem = good_drive['size_available'] %}
{% set work_size = max_drive_mem * 0.7 / 1048576 %}
{% set cache_size = max_drive_mem * 0.25 / 1048576 %}
NC_WORK_SIZE="{{ work_size|int }}"
# The amount of disk space, in megabytes, that the NC is allowed to use
# in its cache directory ($INSTANCE_PATH/eucalyptus/cache).  By default
# the NC chooses automatically.  Values below 10 are ignored.
NC_CACHE_SIZE="{{ cache_size|int }}"
{% endif %}
{% endfor %}
{% if not found.found %}
{% for drive in ansible_mounts %}
{% if drive['mount'] == "/var" %}
{% set good_drive = drive %}
{% if found.update({ 'found': True }) %} {% endif %}
{% set max_drive_mem = good_drive['size_available'] %}
{% set work_size = max_drive_mem * 0.7 / 1048576 %}
{% set cache_size = max_drive_mem * 0.25 / 1048576 %}
NC_WORK_SIZE="{{ work_size|int }}"
# The amount of disk space, in megabytes, that the NC is allowed to use
# in its cache directory ($INSTANCE_PATH/eucalyptus/cache).  By default
# the NC chooses automatically.  Values below 10 are ignored.
NC_CACHE_SIZE="{{ cache_size|int }}"
{% endif %}
{% endfor %}
{%endif%}
{% if not found.found %}
{% for drive in ansible_mounts %}
{% if drive['mount'] == "/" %}
{% set good_drive = drive %}
{% set max_drive_mem = good_drive['size_available'] %}
{% set work_size = max_drive_mem * 0.7 / 1048576 %}
{% set cache_size = max_drive_mem * 0.25 / 1048576 %}
NC_WORK_SIZE="{{ work_size|int }}"
# The amount of disk space, in megabytes, that the NC is allowed to use
# in its cache directory ($INSTANCE_PATH/eucalyptus/cache).  By default
# the NC chooses automatically.  Values below 10 are ignored.
NC_CACHE_SIZE="{{ cache_size|int }}"
{% endif %}
{% endfor %}
{% endif %}
# The number of disk-intensive operations that the NC is allowed to
# perform at once.  A value of 1 serializes all disk-intensive operations.
# The default value is 4.
#CONCURRENT_DISK_OPS=4

# The number of loop devices to make available at NC startup time.
# The default is 256.  If you supply "max_loop" to the loop driver then
# this setting must be equal to that number.
#CREATE_NC_LOOP_DEVICES=256

# The directory where the NC will store instances' root filesystems,
# ephemeral storage, and cached copies of images.
INSTANCE_PATH="/var/lib/eucalyptus/instances"

# If euca-bundle-upload, euca-check-bucket, or euca-delete-bundle do
# not appear in the NC's search PATH then specify their locations here.
#NC_BUNDLE_UPLOAD_PATH="/usr/bin/euca-bundle-upload"
#NC_CHECK_BUCKET_PATH="/usr/bin/euca-check-bucket"
#NC_DELETE_BUNDLE_PATH="/usr/bin/euca-delete-bundle"

# The maximum amount of time, in seconds, that an instance will remain
# in a migration-ready state on a source NC while awaiting the
# preparation of a destination NC for a migration. After this time
# period, the migration request will be terminated and the any
# preparation on the source NC will be rolled back. Default is 15
# minutes.
#NC_MIGRATION_READY_THRESHOLD=900

# The number of connection attempts that NC will try to downlaod an
# image or image manifest from Walrus. Failure to download may be
# due to a registered image not being available for download while
# Walrus is decrypting and caching it. Smallest allowed value is 1,
# while the biggest is 98. The default, as of 3.3.1, is 9, which 
# gives over 13 minutes of wait time. (Download attempts are backed
# off at exponentially increasing intervals up to a max of 300 sec
# between retries.)
#WALRUS_DOWNLOAD_MAX_ATTEMPTS=9

###########################################################################
# NETWORKING CONFIGURATION
#
# The set of networking settings that apply to a cloud varies based on
# its networking mode.  Each setting in this section lists the modes in
# which it applies.  Unless otherwise noted, all of these settings apply
# only to CCs.  All settings that lack default values must be specified
# in the networking modes that use them.
###########################################################################

# The networking mode in which to run.  The same mode must be specified
# on all CCs and NCs in the entire cloud.  Valid values include EDGE,
# MANAGED, and MANAGED-NOVLAN.
{% if networking_mode is defined %}
VNET_MODE="{{ networking_mode }}"
{% else %}
VNET_MODE="EDGE"
{% endif %}
{% if networking_mode is defined and networking_mode == 'EDGE' %}
#
# EDGE SPECIFIC OPTIONS
#
{% if edge_using_private is defined and edge_using_private %}
METADATA_USE_VM_PRIVATE="Y"
{% else %}
METADATA_USE_VM_PRIVATE="N"
{% endif %}
{% endif %}
# The name of the network interface that is on the same network as
# the NCs. The default is "eth0".
# Networking modes: Managed, Managed (No VLAN)
{% if vnet_private is defined %}
VNET_PRIVINTERFACE="{{ vnet_private }}"
{% else %}
VNET_PRIVINTERFACE="eth0"
{% endif %}

# On a CC, this is the name of the network interface that is connected
# to the "public" network.  When tunnelling is enabled, this must be
# a bridge.  The default is "eth0".
# Networking modes: Managed, Managed (No VLAN)
#
# On an NC, this is the name of the network interface that is connected
# to the same network as the CC.  The default is "eth0".
# Networking modes: Edge, Managed
{% if vnet_public is defined %}
VNET_PUBINTERFACE="{{ vnet_public }}"
{% else %}
VNET_PUBINTERFACE="eth0"
{% endif %}
# On an NC, this is the name of the bridge interface to which instances'
# network interfaces should attach.  A physical interface that can reach
# the CC must be attached to this bridge.
# Networking modes: Edge, Managed (No VLAN)
{% if bridge_number is defined %}
VNET_BRIDGE="br{{ bridge_number }}"
{% else %}
VNET_BRIDGE=br0
{% endif %}

# A space-separated list of individual and/or hyphenated ranges of public
# IP addresses to assign to instances.
# Networking modes: Managed, Managed (No VLAN)
{% if networking_mode is defined and networking_mode == 'EDGE' %}
#VNET_PUBLICIPS="your-free-public-ip-1 your-free-public-ip-2 ..."
{% elif pub_ips is defined and networking_mode != 'EDGE' %}
VNET_PUBLICIPS="{% for range in pub_ips %}{{ range }} {% endfor %}"
{% endif %}

# The address and network mask of the network the cloud should use for
# instances' private IP addresses.
# Networking modes: Managed, Managed (No VLAN)
{% if networking_mode is defined and networking_mode == 'EDGE' %}
#VNET_SUBNET="192.168.0.0"
#VNET_NETMASK="255.255.0.0"
{% elif vnet_subnet is defined and vnet_netmask is defined %}
VNET_SUBNET="{{ vnet_subnet }}"
VNET_NETMASK="{{ vnet_netmask }}"
{% endif %}

# The number of IP addresses to allocate to each security group.
# Specify a power of 2 between 16 and 2048.  IMPORTANT: the system
# will reserve 11 IPs from each security group for internal system
# use, leaving VNET_ADDRSPERNET-11 IPs free for VMs to use for each
# security group.
# Networking modes: Managed, Managed (No VLAN)
{% if networking_mode is defined and networking_mode == 'EDGE' %}
#VNET_ADDRSPERNET="32"
{% elif managed_addrpernet is defined %}
VNET_ADDRSPERNET="{{ managed_addrpernet }}"
{% endif %}

# The address of the DNS server to supply to instances in DHCP responses.
# Networking modes: Managed, Managed (No VLAN). Moving forward,
# this option will be deprecated in favor of the CLC property.
{% if networking_mode is defined and networking_mode == 'EDGE' %}
#VNET_DNS="your-dns-server-ip"
{% elif instance_dns_servers is defined %}
VNET_DNS="{{ instance_dns_servers }}"
{% endif %}

# The search domain to supply to instance in DHCP responses.
# NOTE: This should always be cloud.vmstate.instance_subdomain + ".internal",
# and will be overridden by the CLC property. Moving forward, this option will
# be deprecated in favor of the CLC property.
# Networking modes: Managed, Managed (No VLAN)
{% if networking_mode is defined and networking_mode == 'EDGE' %}
#VNET_DOMAINNAME="eucalyptus.interna"
{% elif instance_dns_domain is defined %}
VNET_DOMAINNAME="{{ instance_dns_domain }}"
{% else %}
#VNET_DOMAINNAME="eucalyptus.internal"
{% endif %}

# Set this to the IP address that other CCs can use to reach this CC
# if layer 2 tunneling between CCs does not work.  It is not normally
# necessary to change this setting.
# Networking modes: Managed, Managed (No VLAN)
#VNET_LOCALIP="your-public-interface's-ip"

# The ISC DHCP server executable to use.  The default is
# "/usr/sbin/dhcpd3".
# Networking modes: Edge, Managed, Managed (No VLAN)
VNET_DHCPDAEMON="/usr/sbin/dhcpd"

# The user as which the DHCP daemon runs on your distribution.
# The default is "dhcpd".
# Networking modes: Edge, Managed, Managed (No VLAN)
#VNET_DHCPUSER="dhcpd"
